{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\Desktop\\\\gpt-assist\\\\client\\\\src\\\\pages\\\\chat\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./chat.css\";\nimport LeftNav from \"../../components/leftnav/leftnav\";\nimport FormSection from \"../../components/formSection/formSection\";\nimport AnswerSection from \"../../components/answerSection/answerSection\";\nimport UpgradePane from \"../../components/upgradePane/upgradePane\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const [storedValues, setStoredValues] = useState([]);\n  const generateResponse = async (newQuestion, setNewQuestion) => {\n    const response = await openai.createCompletion(completeOptions);\n    console.log(response.data.choices[0].text);\n    if (response.data.choices) {\n      setStoredValues([{\n        question: newQuestion,\n        answer: response.data.choices[0].text\n      }, ...storedValues]);\n      setNewQuestion(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatContainer\",\n    children: [/*#__PURE__*/_jsxDEV(LeftNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(UpgradePane, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InnerWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(AnswerSection, {\n            storedValues: storedValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n            generateResponse: generateResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor\",\n          children: \"editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Ot+oioh89jezi3f1OL6LdZ0683k=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","LeftNav","FormSection","AnswerSection","UpgradePane","Configuration","OpenAIApi","useState","jsxDEV","_jsxDEV","Chat","_s","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","storedValues","setStoredValues","generateResponse","newQuestion","setNewQuestion","response","createCompletion","completeOptions","console","log","data","choices","text","question","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Documents/Desktop/gpt-assist/client/src/pages/chat/chat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./chat.css\";\r\nimport LeftNav from \"../../components/leftnav/leftnav\";\r\nimport FormSection from \"../../components/formSection/formSection\";\r\nimport AnswerSection from \"../../components/answerSection/answerSection\";\r\nimport UpgradePane from \"../../components/upgradePane/upgradePane\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Chat() {\r\n\r\n  const configuration = new Configuration({ \r\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\r\n  });\r\n  \r\n\r\n  const openai = new OpenAIApi(configuration);\r\n\r\n  const [storedValues, setStoredValues] = useState([]);\r\n\r\n  const generateResponse = async (newQuestion, setNewQuestion) => {\r\n   \r\n    const response = await openai.createCompletion(completeOptions);\r\n\r\n    console.log(response.data.choices[0].text);\r\n\r\n    if (response.data.choices) {\r\n      setStoredValues([\r\n        {\r\n          question: newQuestion,\r\n          answer: response.data.choices[0].text,\r\n        },\r\n        ...storedValues,\r\n      ]);\r\n      setNewQuestion(\"\");\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatContainer\">\r\n      <LeftNav />\r\n      <div className=\"OuterWrapper\">\r\n        <UpgradePane />\r\n        <div className=\"InnerWrapper\">\r\n          <div className=\"chat\">\r\n            <AnswerSection storedValues={storedValues}/>\r\n            <FormSection generateResponse={generateResponse}/>\r\n          </div>\r\n          <div className=\"editor\">editor</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,kCAAkC;AACtD,OAAOC,WAAW,MAAM,0CAA0C;AAClE,OAAOC,aAAa,MAAM,8CAA8C;AACxE,OAAOC,WAAW,MAAM,0CAA0C;AAClE,SAASC,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAMC,aAAa,GAAG,IAAIP,aAAa,CAAC;IACtCQ,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC;EACtB,CAAC,CAAC;EAGF,MAAMC,MAAM,GAAG,IAAIX,SAAS,CAACM,aAAa,CAAC;EAE3C,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,cAAc,KAAK;IAE9D,MAAMC,QAAQ,GAAG,MAAMN,MAAM,CAACO,gBAAgB,CAACC,eAAe,CAAC;IAE/DC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IAE1C,IAAIP,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE;MACzBV,eAAe,CAAC,CACd;QACEY,QAAQ,EAAEV,WAAW;QACrBW,MAAM,EAAET,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC;MACnC,CAAC,EACD,GAAGZ,YAAY,CAChB,CAAC;MACFI,cAAc,CAAC,EAAE,CAAC;IACpB;EAEF,CAAC;EAED,oBACEb,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzB,OAAA,CAACR,OAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACX7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BzB,OAAA,CAACL,WAAW;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACf7B,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BzB,OAAA;UAAKwB,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBzB,OAAA,CAACN,aAAa;YAACe,YAAY,EAAEA;UAAa;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAC5C7B,OAAA,CAACP,WAAW;YAACkB,gBAAgB,EAAEA;UAAiB;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC9C,eACN7B,OAAA;UAAKwB,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC3B,EAAA,CA7CuBD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}