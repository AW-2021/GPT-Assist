{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ahmed\\\\Documents\\\\Desktop\\\\gpt-assist\\\\client\\\\src\\\\pages\\\\chat\\\\chat.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./chat.css\";\nimport LeftNav from \"../../components/leftnav/leftnav\";\nimport FormSection from \"../../components/formSection/formSection\";\nimport AnswerSection from \"../../components/answerSection/answerSection\";\nimport UpgradePane from \"../../components/upgradePane/upgradePane\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const configuration = new Configuration({\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY\n  });\n  const openai = new OpenAIApi(configuration);\n  const [storedValues, setStoredValues] = useState([]);\n  const generateResponse = async (newQuestion, setNewQuestion) => {\n    let options = {\n      model: \"text-davinci-003\",\n      temperature: 0,\n      max_tokens: 100,\n      top_p: 1,\n      frequency_penalty: 0.0,\n      presence_penalty: 0.0,\n      stop: [\"/\"]\n    };\n    let completeOptions = {\n      ...options,\n      prompt: newQuestion\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(apiKey)\n      },\n      body: JSON.stringify(params_)\n    };\n    const response = await openai.createCompletion(completeOptions);\n    console.log(response.data.choices[0].text);\n    if (response.data.choices) {\n      setStoredValues([{\n        question: newQuestion,\n        answer: response.data.choices[0].text\n      }, ...storedValues]);\n      setNewQuestion(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatContainer\",\n    children: [/*#__PURE__*/_jsxDEV(LeftNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(UpgradePane, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InnerWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          children: [/*#__PURE__*/_jsxDEV(AnswerSection, {\n            storedValues: storedValues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormSection, {\n            generateResponse: generateResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor\",\n          children: \"editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"Ot+oioh89jezi3f1OL6LdZ0683k=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","LeftNav","FormSection","AnswerSection","UpgradePane","Configuration","OpenAIApi","useState","jsxDEV","_jsxDEV","Chat","_s","configuration","apiKey","process","env","REACT_APP_OPENAI_API_KEY","openai","storedValues","setStoredValues","generateResponse","newQuestion","setNewQuestion","options","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","completeOptions","prompt","requestOptions","method","headers","String","body","JSON","stringify","params_","response","createCompletion","console","log","data","choices","text","question","answer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ahmed/Documents/Desktop/gpt-assist/client/src/pages/chat/chat.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./chat.css\";\r\nimport LeftNav from \"../../components/leftnav/leftnav\";\r\nimport FormSection from \"../../components/formSection/formSection\";\r\nimport AnswerSection from \"../../components/answerSection/answerSection\";\r\nimport UpgradePane from \"../../components/upgradePane/upgradePane\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Chat() {\r\n\r\n  const configuration = new Configuration({ \r\n    apiKey: process.env.REACT_APP_OPENAI_API_KEY,\r\n  });\r\n  \r\n\r\n  const openai = new OpenAIApi(configuration);\r\n\r\n  const [storedValues, setStoredValues] = useState([]);\r\n\r\n  const generateResponse = async (newQuestion, setNewQuestion) => {\r\n    \r\n    let options = {\r\n      model: \"text-davinci-003\",\r\n      temperature: 0,\r\n      max_tokens: 100,\r\n      top_p: 1,\r\n      frequency_penalty: 0.0,\r\n      presence_penalty: 0.0,\r\n      stop: [\"/\"],\r\n    };\r\n\r\n    let completeOptions = {\r\n      ...options,\r\n      prompt: newQuestion,\r\n    };\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + String(apiKey)\r\n      },\r\n      body: JSON.stringify(params_)\r\n    };\r\n\r\n    const response = await openai.createCompletion(completeOptions);\r\n\r\n    console.log(response.data.choices[0].text);\r\n\r\n    if (response.data.choices) {\r\n      setStoredValues([\r\n        {\r\n          question: newQuestion,\r\n          answer: response.data.choices[0].text,\r\n        },\r\n        ...storedValues,\r\n      ]);\r\n      setNewQuestion(\"\");\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatContainer\">\r\n      <LeftNav />\r\n      <div className=\"OuterWrapper\">\r\n        <UpgradePane />\r\n        <div className=\"InnerWrapper\">\r\n          <div className=\"chat\">\r\n            <AnswerSection storedValues={storedValues}/>\r\n            <FormSection generateResponse={generateResponse}/>\r\n          </div>\r\n          <div className=\"editor\">editor</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}